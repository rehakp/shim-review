--- a/grub-core/commands/i386/pc/play.c	2017-07-20 13:48:34.243616480 +0200
+++ b/grub-core/commands/i386/pc/play.c	2017-07-20 12:07:54.880151404 +0200
@@ -29,6 +29,7 @@
 #include <grub/i18n.h>
 #include <grub/time.h>
 #include <grub/speaker.h>
+#include <grub/env.h>
 
 GRUB_MOD_LICENSE ("GPLv3+");
 
@@ -44,13 +45,43 @@ struct note
   grub_uint16_t duration;
 };
 
+static int key;
+
+/* Returns 1 if any key pressed, 0 otherwise.
+   Sets the global variable key to the key code of the pressed key(s). */
+static int
+key_pressed (void)
+{
+  int key_status = 0;
+
+  key = grub_getkey_noblock ();
+  if (key == GRUB_TERM_NO_KEY)
+    {
+      grub_term_input_t term;
+
+      if (grub_term_poll_usb)
+	grub_term_poll_usb (0);
+
+      FOR_ACTIVE_TERM_INPUTS(term)
+      {
+	if (term->getkeystatus)
+	  /* disregard toggle keys */
+	  key_status = term->getkeystatus (term) & ~(GRUB_TERM_STATUS_SCROLL
+	    | GRUB_TERM_STATUS_NUM | GRUB_TERM_STATUS_CAPS);
+      }
+    }
+
+  return (key != GRUB_TERM_NO_KEY) || (key_status != 0);
+}
+
 /* Returns whether playing should continue.  */
 static int
 play (unsigned tempo, struct note *note)
 {
   grub_uint64_t to;
+  int last_key_pressed;
 
-  if (note->pitch == T_FINE || grub_getkey_noblock () != GRUB_TERM_NO_KEY)
+  if ((note->pitch == T_FINE) || key_pressed ())
     return 1;
 
   grub_dprintf ("play", "pitch = %d, duration = %d\n", note->pitch,
@@ -69,9 +100,9 @@ play (unsigned tempo, struct note *note)
 
   to = grub_get_time_ms () + BASE_TEMPO * note->duration / tempo;
   while ((grub_get_time_ms () <= to)
-	 && (grub_getkey_noblock () == GRUB_TERM_NO_KEY));
+	 && ! (last_key_pressed = key_pressed ())) ;
 
-  return 0;
+  return last_key_pressed ? 1 : 0;
 }
 
 static grub_err_t
@@ -179,6 +210,14 @@ grub_cmd_play (grub_command_t cmd __attr
 
   grub_speaker_beep_off ();
 
+  if (key != GRUB_TERM_NO_KEY)
+    {
+      grub_env_set("playkey", grub_xasprintf("%x", key));
+    }
+  else
+    {
+      grub_env_unset("playkey");
+    }
   return 0;
 }
 
